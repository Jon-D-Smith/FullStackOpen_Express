{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","target","window","confirm","delete","console","log","name","put","Filter","filter","handleChangeFilter","setFilter","value","onChange","PersonForm","handleAddPerson","handleChangeName","handleChangeNumber","newName","newNumber","onSubmit","type","Persons","personsToShow","handleClick","map","person","number","onClick","Notification","message","messageClass","className","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","setMessageClass","useEffect","personService","initialPersons","length","includes","e","preventDefault","newPerson","some","find","setTimeout","returnedPerson","concat","targetPerson","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e73d6186.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteOne = (id, target) => {\r\n    const result = window.confirm(`Do you really want to delete ${target}?`)\r\n    if(result){\r\n        const request = axios.delete(`${baseUrl}/${id}`)\r\n        return request.then(response => console.log(response.data))\r\n    }\r\n    return\r\n}\r\n\r\nconst updateOne = (id, target, newObject) => {\r\n    const result = window.confirm(`${target.name} already exists. Would you like to update their number?`)\r\n    if(result) {\r\n        const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n        return request.then(response => response.data)\r\n    }\r\n    return\r\n}\r\n\r\nexport default  {\r\n    getAll,\r\n    create,\r\n    deleteOne,\r\n    updateOne\r\n}","const Filter = ({filter, setFilter, handleChangeFilter}) => {\r\n\r\n\r\n\r\n return ( \r\n        <form >\r\n        Filter List <input value={filter} onChange={handleChangeFilter} />\r\n      </form>\r\n     );\r\n}\r\n \r\nexport default Filter;","const PersonForm = ({handleAddPerson, handleChangeName, handleChangeNumber, newName, newNumber}) => {\r\n    return ( \r\n        <form onSubmit={handleAddPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleChangeName} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleChangeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n     );\r\n}\r\n \r\nexport default PersonForm;","const Persons = ({personsToShow, handleClick}) => {\r\n    return ( \r\n        <>\r\n        {personsToShow.map(person => {\r\n            return(\r\n                <>\r\n            <p key={person.id}>{person.name}  {person.number}<button id={person.id} onClick={handleClick} >delete</button></p>\r\n                \r\n                </>\r\n          )})}\r\n          </>\r\n     );\r\n}\r\n \r\nexport default Persons;","const Notification = ({message, messageClass}) => {\r\n    return ( \r\n        <div className={messageClass}>\r\n            {message}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  // Controlling state\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState('')\n\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n                \n  }, [])\n \n\n  // handling the onChange events in the form\n  const handleChangeName = (e) => {\n    setNewName(e.target.value)\n  }  \n  \n  const handleChangeNumber = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleChangeFilter = (e) => {\n    setFilter(e.target.value)\n  }\n\n\n  // Show people based on filter\n  const personsToShow = filter.length === 0 ? persons : persons.filter(person => person.name.includes(filter))\n\n\n  //Deleting people\n  const handleDeletePerson = (e) => {\n    e.preventDefault()\n    const id = e.target.id\n    const targetPerson = persons.find(person => person.id == id)\n    const target = targetPerson.name \n    setPersons(persons.filter(person => person.name !== target))\n    personService.deleteOne(id, target)\n    .then(\n      setMessageClass('success'),\n      setMessage(`${targetPerson.name} deleted`),\n      setTimeout(() => {\n      setMessage(null)\n      setMessageClass('')\n    }, 5000)\n    )\n    .catch( error => {\n      return(\n        setMessageClass('error'),\n        setMessage(`${targetPerson.name} has already been removed from the server`),\n        setTimeout(() => {\n          setMessage(null)\n          setMessageClass('')\n        }, 5000)\n      )\n      \n    }\n\n  )\n    \n  }\n\n  // Adding a new person\n  const handleAddPerson = (e) => {\n    e.preventDefault() \n    const newPerson = {\n      id:persons.length+1,\n      name: newName,\n      number: newNumber\n    }\n\n    // Check to see if they exist in the persons array\n    const alreadyExists = persons.some(person => person.name === newName);\n    if(alreadyExists){\n      const target = persons.find(person => person.name === newName)\n      const id = target.id\n      \n      return(\n        \n        personService.updateOne(id, target, newPerson)\n        .then(\n          setNewName(''),\n          setNewNumber(''),\n          setMessageClass('success'),\n          setMessage(`${newPerson.name} updated`),\n          setTimeout(() => {\n            setMessage(null)\n            setMessageClass('')\n          }, 5000)\n        )\n      )\n\n    } else {\n      return (\n        personService.create(newPerson)\n             .then(returnedPerson => setPersons(persons.concat(returnedPerson)),\n             setNewName(''),\n             setNewNumber('')),\n             setMessageClass('success'),\n             setMessage(`${newPerson.name} added`),\n             setTimeout(() => {\n             setMessage(null)\n             setMessageClass('')\n          }, 5000)\n        \n      )\n      \n    }\n    \n  }\n\n \n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n     <Notification message={message} messageClass={messageClass} />\n      <Filter \n      filter={filter} \n      setFilter={setFilter} \n      handleChangeFilter={handleChangeFilter}\n      />\n      <h2>Add new</h2>\n      \n      <PersonForm \n      handleAddPerson={handleAddPerson} \n      handleChangeName={handleChangeName} \n      handleChangeNumber={handleChangeNumber} \n      newName={newName} \n      newNumber={newNumber} /> \n\n      <h2>Numbers</h2>\n\n      <Persons personsToShow={personsToShow} handleClick={handleDeletePerson} />\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}